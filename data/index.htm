<!DOCTYPE html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap"
        rel="stylesheet">
    <title>ESL test</title>
    <style type="text/css">
        * {
            font-family: 'Roboto', sans-serif;
            font-weight: 300;
        }
        h2, h3, h4, h5, b {
            font-weight: 700;
        }
        h1 {
            font-weight: 900;
        }
        button {
            font-weight: 400;
        }
        label {
            font-weight: 500;
        }
        section {
            margin: 1.5em;
            border: 1px solid black;
            padding: 1em;
        }
        section>h2 {
            background-color: white;
            margin-top: -1.5em;
            width: max-content;
            padding: 0 0.5em;
            margin-left: 0.5em;
        }
    </style>
</head>

<body>

    <header>
        <h1>ESL config</h1>
        <p>Simple web inerface to controll ESL displays</p>
    </header>
    <section>
        <h2>Activates a new display</h2>
        <label for="serial">Serial:</label>
        <input type="text" id="serial" name="serial" value="JM10029630B">
        <label for="disp_id">New id:</label>
        <input type="text" id="disp_id" name="disp_id" value="123">
        <button
            onclick='send("activate_display?serial="+document.getElementById("serial").value+"&id="+document.getElementById("disp_id").value)'>Activate
            new display</button>
        <label for="serial">Used wakeup channel:</label>
        <button onclick='send("set_wu_channel?freq=4")'>EU</button>
        <button onclick='send("set_wu_channel?freq=35")'>US</button>
    </section>


    <section>
        <h2>Send a cmd/image/text to a display</h2>
        <label for="disp_id1">Id:</label>
        <input type="text" id="disp_id1" name="disp_id1" value="123">
        <label for="cmd">CMD:</label>
        <input type="text" id="cmd" name="cmd" value="85050106000101">
        <button
            onclick='send("set_cmd?id="+document.getElementById("disp_id1").value+"&cmd="+document.getElementById("cmd").value)'>Send
            CMD</button>
        <button onclick='get("get_answer")'>Get CMD status</button>
        <p>
            Send an image or raw .bin to display:
            (First upload the files <a href="/edit">here</a>)
        </p>
        <label for="file">Filename:</label>
        <input type="text" id="file" name="file" value="last_compressed_img.bin">
        <button
            onclick='send("set_file?id="+document.getElementById("disp_id1").value+"&file="+document.getElementById("file").value)'>Send
            file from spiffs</button>
        <br>
        <label for="file1">Filename:</label>
        <input type="text" id="file1" name="file1" value="image.bmp">
        <label for="file1">Filename color 2:</label>
        <input type="text" id="file2" name="file2" value="">
        <button
            onclick='send("set_bmp_file?id="+document.getElementById("disp_id1").value+"&file="+document.getElementById("file1").value+"&file1="+document.getElementById("file2").value)'>Send
            .bmp</button>
        <button
            onclick='send("set_bmp_file?id="+document.getElementById("disp_id1").value+"&file="+document.getElementById("file1").value+"&file1="+document.getElementById("file2").value+"&save_comp_file=1")'>Send
            .bmp and save compressed one on spiffs</button>
        <br>
<button onclick='send_post("set_custom?id="+document.getElementById("disp_id1").value+"&type="+document.getElementById("disp_type").value,document.getElementById("multiline").value)'>Send Text</button>
   <label for="disp_type">Display Type:</label>
   <select id="disp_type" name="disp_type">
    <option value="0">50c</option>
    <option value="1">900RB</option>
    <option value="2">Chroma29</option>
    <option value="3">Chroma74</option>
  </select>
  <br>
<textarea id="multiline" name="multiline" rows="8" cols="32" wrap="hard">
Enter text here. Each display type uses a font which fits about 18 characters per line.
</textarea>

<br>
    </section>


    <section>
        <h2>Recover display</h2>
        <label for="serial2">Serial:</label>
        <input type="text" id="serial2" name="serial2" value="JM10029630B">
        <button onclick='send("recover_display?serial="+document.getElementById("serial2").value)'>Recover
            display</button>
    </section>

    <section>
        <h2>Maintenance</h2>
        <button onclick='get("heap")'>Get Heap</button>
        <button onclick='send("set_mode?mode=wusync")'>Wake + Full Sync</button>
        <button onclick='send("set_mode?mode=fullsync")'>Full Sync</button>
        <button onclick='send("set_mode?mode=idle")'>Idle</button>
        <button onclick='send("delete_file")'>delete log files</button>
        <button onclick='send("reboot")'>Reboot ESP32</button>
    </section>

    <section>
        <h2>Settings</h2>
        Set Freq and ID:<br>
        <label for="the_freq">Freq 0 - 71:</label>
        <input type="text" id="the_freq" name="the_freq" value="0">
        <label for="the_net_id">Net_ID 1 - 253:</label>
        <input type="text" id="the_net_id" name="the_net_id" value="1">
        <button
            onclick='send("set_id?freq="+document.getElementById("the_freq").value+"&net_id="+document.getElementById("the_net_id").value)'>Set
            Freq & NetID</button><br>
        Set Num slots:<br>
        <label for="num_slots">Slots:</label>
        <input type="text" id="num_slots" name="num_slots" value="4">
        <button onclick='send("set_num_slot?num_slots="+document.getElementById("num_slots").value)'>Set
            num_slots</button><br>
        Set base freq offset:<br>
        <label for="freq_offset">Offset -127 - 127:</label>
        <input type="text" id="freq_offset" name="freq_offset" value="0">
        <button onclick='send("set_freq_offset?offset="+document.getElementById("freq_offset").value)'>Set freq
            offset</button><br>
        <button onclick='send("save_settings")'>save_settings</button>
        <button onclick='send("delete_settings")'>delete settings file</button>
        <button onclick='get("get_settings")'>get settings</button>
    </section>

    <section>
        <h2>Status</h2>
        <div id="answer"></div>
        <div id="content"></div>
        <div id="dot"></div>
    </section>

    <script>
        const answerDiv = document.getElementById('answer');
        const contentDiv = document.getElementById("content");
        const progressMarker = document.getElementById("dot");

        async function send(url) {
            try {
                const resp = await fetch(url, { method: "POST" })
                answerDiv.innerHTML = await resp.text()
            } catch (err) {
                answerDiv.innerHTML = "ERROR: " + err
            }
        }
        
        async function send_post(url,data_text) {
            try {
        
        var data = new FormData();
        data.append('text', data_text);
        var xhr = new XMLHttpRequest();
        xhr.open('POST', url, true);
        xhr.onload = function () {
          answerDiv.innerHTML = this.responseText;
          console.log(this.responseText);
        };
        xhr.send(data);
            } catch (err) {
                answerDiv.innerHTML = "ERROR: " + err
            }
        }
        

        async function get(url) {
            try {
                const resp = await fetch(url, { method: "GET" })
                answerDiv.innerHTML = await resp.text()
            } catch (err) {
                answerDiv.innerHTML = "ERROR: " + err
            }
        }

        let tikTok = false;
        async function updateStatus() {
            try {
                const resp = await fetch("get_mode", { method: "GET" })
                if (resp.status !== 200) {
                    throw new Error(`unexpected status code ${resp.status}`);
                }
                contentDiv.innerHTML = await resp.text();
                tikTok = !tikTok;
                progressMarker.innerText = tikTok ? "âš«" : "âšª";
            } catch (err) {
                contentDiv.innerHTML = "<b>ERROR:</b> " + err;
                progressMarker.innerText = "ðŸ”´";
            } finally {
                setTimeout(updateStatus, 1000 + Math.floor(Math.random() * 100));
            }
        }

        updateStatus();
    </script>
</body>

</html>
